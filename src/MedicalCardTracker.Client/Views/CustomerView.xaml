<Window x:Class="MedicalCardTracker.Client.Views.CustomerView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:vm="clr-namespace:MedicalCardTracker.Client.ViewModels"
        xmlns:enum="clr-namespace:MedicalCardTracker.Client.Models.Enums"
        d:DataContext="{d:DesignInstance Type=vm:CustomerViewModel}"
        mc:Ignorable="d"

        Title="{DynamicResource CustomerViewTitle}"
        Width="700" SizeToContent="Height"
        ResizeMode="CanMinimize"
        WindowStartupLocation="CenterScreen"
        FontSize="18"
        Closing="CustomerView_OnClosing">
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Setter Property="IsEnabled" Value="False" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding HubConnectionHelper.HubConnectionStatus}"
                             Value="{x:Static enum:HubConnectionStatus.Connected}">
                    <Setter Property="IsEnabled" Value="True" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Style>
    <StackPanel Orientation="Vertical">
        <Grid Margin="8"
              IsEnabled="{Binding IsWindowEnable}">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Button Margin="4"
                        Padding="4"
                        FontSize="22"
                        Content="{DynamicResource OpenCardRequestsViewButton}"
                        Command="{Binding OpenCardRequestsViewCommand}" />
            </Grid>
            <GroupBox Grid.Row="1"
                      Padding="4"
                      Header="{DynamicResource PatientGroupBoxHeader}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="164" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Row="0" Grid.Column="0"
                           Content="{DynamicResource PatientBirthDateLabel}" />
                    <DatePicker Grid.Row="1" Grid.Column="0"
                                Margin="4"
                                Text="{Binding PatientBirthDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                VerticalContentAlignment="Center" />
                    <Label Grid.Row="0" Grid.Column="1"
                           Content="{DynamicResource PatientFullNameLabel}" />
                    <TextBox Grid.Row="1" Grid.Column="1"
                             Margin="4"
                             Height="32"
                             VerticalContentAlignment="Center"
                             Text="{Binding PatientFullName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </Grid>
            </GroupBox>
            <StackPanel Grid.Row="2"
                        Orientation="Vertical">
                <Label Content="{DynamicResource DescriptionLabel}" />
                <TextBox Height="Auto"
                         MinHeight="77"
                         Margin="4,0,4,0"
                         TextWrapping="Wrap"
                         AcceptsReturn="True"
                         Text="{Binding Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>
            <Grid Grid.Row="3"
                  Height="48"
                  Margin="4 8 4 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="164" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <ComboBox Grid.Column="0"
                          Margin="4"
                          VerticalContentAlignment="Center"
                          FontSize="22"
                          SelectedIndex="{Binding Priority, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          ItemsSource="{StaticResource RequestUrgency}" />
                <Button Grid.Column="1"
                        Margin="4"
                        FontSize="22"
                        Content="{Binding Configuration.TargetAddress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        ContentStringFormat="{DynamicResource SendRequestButtonContent}"
                        Command="{Binding SendRequestCommand}" />
            </Grid>
        </Grid>
        <StackPanel>
            <StackPanel.Style>
                <Style TargetType="{x:Type StackPanel}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RequestSendingProgress}"
                                     Value="{x:Static enum:RequestSendingProgress.None}">
                            <Setter Property="Background" Value="{DynamicResource AccentColor}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RequestSendingProgress}"
                                     Value="{x:Static enum:RequestSendingProgress.Pending}">
                            <Setter Property="Background" Value="{DynamicResource PendingStatusColor}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RequestSendingProgress}"
                                     Value="{x:Static enum:RequestSendingProgress.Success}">
                            <Setter Property="Background" Value="{DynamicResource SuccessStatusColor}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RequestSendingProgress}"
                                     Value="{x:Static enum:RequestSendingProgress.Failed}">
                            <Setter Property="Background" Value="{DynamicResource FailedStatusColor}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
            <Label>
                <Label.Style>
                    <Style TargetType="{x:Type Label}">
                        <Setter Property="FontSize" Value="16" />
                        <Setter Property="Foreground" Value="White" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RequestSendingProgress}"
                                         Value="{x:Static enum:RequestSendingProgress.None}">
                                <Setter Property="Content" Value="{DynamicResource RequestSendingProgressNoneTip}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RequestSendingProgress}"
                                         Value="{x:Static enum:RequestSendingProgress.Pending}">
                                <Setter Property="Content" Value="{DynamicResource RequestSendingProgressPendingTip}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RequestSendingProgress}"
                                         Value="{x:Static enum:RequestSendingProgress.Success}">
                                <Setter Property="Content" Value="{DynamicResource RequestSendingProgressSuccessTip}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RequestSendingProgress}"
                                         Value="{x:Static enum:RequestSendingProgress.Failed}">
                                <Setter Property="Content" Value="{DynamicResource RequestSendingProgressFailedTip}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
            <ProgressBar Height="5"
                         Panel.ZIndex="-1"
                         IsIndeterminate="True" Margin="0,-1,0,0">
                <ProgressBar.Style>
                    <Style TargetType="{x:Type ProgressBar}">
                        <Setter Property="Background" Value="{DynamicResource PendingStatusColor}" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RequestSendingProgress}"
                                         Value="{x:Static enum:RequestSendingProgress.Pending}">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ProgressBar.Style>
            </ProgressBar>
        </StackPanel>
    </StackPanel>
</Window>